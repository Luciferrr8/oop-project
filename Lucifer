import streamlit as st
from ollama import chat
import time

if 'users' not in st.session_state:
    st.session_state.users = {
        'Lucifer': '155448'
    }

if 'logged_in' not in st.session_state:
    st.session_state.logged_in = False
    st.session_state.username = None

if 'forgot_password'not in st.session_state:
    st.session_state.forgot_password = False

if 'attempts' not in st.session_state:
    st.session_state.attempts = 0

st.set_page_config(
    page_title="AI Chat App",
    page_icon="🧛🏻")

def check_login(username, password):
    return st.session_state.users.get(username) == password

def Signin(username, password):
    if username in st.session_state.users:
        return False
    st.session_state.users[username] = password
    return True

def change_password(username, new_password):
    if username in st.session_state.users:
        st.session_state.users[username] = new_password
        return True
    return False

if not st.session_state.logged_in:
    st.markdown("<h1 style='text-align: center; color: #FF0099;'>🔥 What's up Bro 🔥</h1>", unsafe_allow_html=True)

    if st.session_state.attempts < 3:
        tab1, tab2 = st.tabs(["Login", "Signin"])
    else:
        tab1, tab2, tab3 = st.tabs(["Login", "Signin", "Forgot Password"])

    with tab1:
        with st.form(key='login_form'):
            username = st.text_input('Username')
            password = st.text_input('Password', type='password')
            login_button = st.form_submit_button('Login')

        if login_button:
            if check_login(username, password):
                st.session_state.logged_in = True
                st.success('Successful!')
                st.session_state.attempts = 0
                time.sleep(0)
                st.rerun()
            else:
                st.session_state.attempts += 1
                st.error('Incorrect Username or Password!')

    with tab2:
        with st.form(key='Signin_form'):
            new_username = st.text_input('Create Username')
            new_password = st.text_input('Create Password', type='password')
            confirm_password = st.text_input('Confirm password', type='password')
            Signin_button = st.form_submit_button('Signin')

        if Signin_button:
            if not new_username or not new_password or not confirm_password:
                st.error("Please fill in all fields!")
            elif new_password != confirm_password:
                st.error("Passwords do not match! ❌")
            elif new_username in st.session_state.users:
                st.error("Username already exists. Try another one.")
            else:
                st.session_state.users[new_username] = new_password
                st.session_state.logged_in = True
                st.session_state.username = new_username
                st.success(f"🎉 Registration successful! Welcome, {new_username}!")
                time.sleep(0)
                st.rerun()

    if st.session_state.attempts >=3:
        with tab3:
            with st.form(key='forgot_password_form'):
                reset_username = st.text_input("Enter your username")
                new_password = st.text_input("Enter new password", type="password")
                confirm_new_password = st.text_input("Confirm new password", type="password")
                reset_button = st.form_submit_button("Reset Password")

        if reset_button:
            if reset_username not in st.session_state.users:
                    st.error("Username not found! ❌")
            elif new_password != confirm_new_password:
                st.error("Passwords do not match! ❌")
            else:
                st.session_state.users[reset_username] = new_password
                st.success("Password changed successfully! Please log in.")
                st.session_state.attempts = 0
                time.sleep(0)
                st.rerun()

        else:
            st.write("You need to attempt to login 3 times with incorrect credentials before you can reset your password.")

if st.session_state.logged_in:
    st.header("🌎 Welcome to My Word 🌎")

    if st.button("Logout"):
        st.session_state.logged_in = False
        st.session_state.username = None
        st.session_state.messages = []
        st.rerun()

    if 'messages' not in st.session_state:
        st.session_state.messages = []

    for message in st.session_state.messages:
        with st.chat_message(name=message['role']):
            st.write(message['content'])

    user_message = st.chat_input("type something...")
    if user_message:
        st.session_state.messages.append({
            'role': '🐺',
            'content': user_message
        })
        with st.chat_message(name='🐺'):
            st.write(user_message)

        with st.chat_message("👾"):
            response_container = st.empty()
            full_response = ""
            for chunk in chat(model='llama3', messages=[{'role': 'user', 'content': user_message}], stream=True):
                full_response += chunk["message"]["content"]
                response_container.markdown(full_response + "▌")
            response_container.markdown(full_response)

        st.session_state.messages.append({"role": "assistant", "content": full_response})
